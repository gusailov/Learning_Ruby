В Ruby есть еще один цикл, о котором не рассказано в скринкасте. Это цикл loop. 
Он представляет собой бесконечный безусловный цикл. 
Полезен, например, как цикл ожидания ввода (например, выводит меню и ждет от пользователя выбор). 
Его можно прервать по ключевому слову break (как и любой другой цикл).

При помощи loop и break, а также условных операторов можно реализовать цикл с пост-условием, т.е. цикл, который выполнится как минимум 1 раз.

Пример. Ввод от пользователя:

loop do
  puts "1. Считаем идеальный вес"
  puts "2. Считаем площадь треугольника"
  puts "0. Выход"
  puts "Выберите вариант: "
  input = gets.to_i
  break if input == 0

  # здесь идет обработка ввода, в зависимости от выбранного варианта
end



В скринкасте, на 3-м слайде указано следующее выражение:

1.object_id == 1.object_id #=> false
На момент записи скринкастов это выражение было верным. Но в более поздних версиях Ruby оптимизировали хранение чисел в памяти и теперь это выражение вернет true.

Однако, для строк по-прежнему сохраняется утверждение, что object_id у одинаковых строк будет разный, т.е. если написать

"1".object_id == "1".object_id #=> false

то выражение вернет false.

Однако,

"1" == "1" #=> true

Это означает, что строки, состоящие из одинаковых символов, фактически являются разными объектами в памяти.


Ссылки на дополнительные материалы к ознакомлению:

Ruby in 100 Minutes (разделы 4, 6-8): http://tutorials.jumpstartlab.com/projects/ruby_in_100_minutes.html

Документация к классу Array: https://ruby-doc.org/core-2.6/Array.html

Документация к классу Hash: rhttps://ruby-doc.org/core-2.6/Hash.html


Задание к уроку "Основы Ruby. Часть 2"

Решить следующие задачи, приложить ссылку на репозиторий с решением в качестве ответа:

1. Сделать хеш, содержащий месяцы и количество дней в месяце. В цикле выводить те месяцы, у которых количество дней ровно 30
2. Заполнить массив числами от 10 до 100 с шагом 5
3. Заполнить массив числами фибоначчи до 100
4. Заполнить хеш гласными буквами, где значением будет являтся порядковый номер буквы в алфавите (a - 1).

5. Заданы три числа, которые обозначают число, месяц, год (запрашиваем у пользователя). 
Найти порядковый номер даты, начиная отсчет с начала года. Учесть, что год может быть високосным. 
(Запрещено использовать встроенные в ruby методы для этого вроде Date#yday или Date#leap?) 
Алгоритм опредления високосного года: http://www.adm.yar.ru/arch_serv/2000/Microsoft/content/vis.htm


6. Сумма покупок. Пользователь вводит поочередно название товара, цену за единицу и кол-во купленного товара (может быть нецелым числом). 
Пользователь может ввести произвольное кол-во товаров до тех пор, пока не введет "стоп" в качестве названия товара. На основе введенных данных требуетеся:
Заполнить и вывести на экран хеш, ключами которого являются названия товаров, а значением - вложенный хеш, содержащий цену за единицу товара и кол-во купленного товара. 
Также вывести итоговую сумму за каждый товар.
Вычислить и вывести на экран итоговую сумму всех покупок в "корзине".